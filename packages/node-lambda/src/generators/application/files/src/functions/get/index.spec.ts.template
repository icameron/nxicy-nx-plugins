import { APIGatewayProxyEvent } from 'aws-lambda';
import * as index from './index';

describe('<%= name %> function', () => {
  it('should return correct response', async () => {
    const mockEvent:APIGatewayProxyEvent = {
      body: '',
      httpMethod: '',
      isBase64Encoded: false,
      path: '',
      resource: '',
      headers: {},
      multiValueHeaders: {},
      pathParameters: null,
      queryStringParameters: null,
      multiValueQueryStringParameters: null,
      stageVariables: null,
      requestContext: {
        accountId: "",
        apiId: "",
        authorizer: undefined,
        protocol: '',
        httpMethod: '',
        identity: {
          accessKey: null,
          accountId: null,
          apiKey: null,
          apiKeyId: null,
          caller: null,
          clientCert: null,
          cognitoAuthenticationProvider: null,
          cognitoAuthenticationType: null,
          cognitoIdentityId: null,
          cognitoIdentityPoolId: null,
          principalOrgId: null,
          sourceIp: '',
          user: null,
          userAgent: null,
          userArn: null
        },
        path: '',
        stage: '',
        requestId: '',
        requestTimeEpoch: 0,
        resourceId: '',
        resourcePath: ''
      }
    };

    const result = {
      statusCode: 200,
      body: `hello world`,
    };
    const response = await index.handler(mockEvent);
    expect(response).toStrictEqual(result); 
  });
});
